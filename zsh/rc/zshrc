export LANG=ja_JP.UTF-8

autoload -Uz colors
colors

# コマンドのスペルミスを指摘
setopt correct

#bindkey -v
#bindkey -a

case ${OSTYPE} in
  darwin*)
    # MAC
    PROMPT='%F{red}[%n@%m]%f %~
%% '
    export PATH="/usr/local/sbin:$PATH"
    #export PATH=$PATH:/Applications/MAMP/Library/bin
    ;;
  linux*)
    # LINUX
    PROMPT='%F{blue}[%n@%m]%f %~
%% '
    ;;
esac


fpath=(/usr/local/share/zsh-completions $fpath)

alias la="ls -a"
alias ll="ls -l"
alias du="du -h"
alias df="df -h"

# ls で ディレクトリに色を付ける
autoload -U compinit
compinit -u

export LSCOLORS=exfxcxdxbxegedabagacad
export LS_COLORS='di=34:ln=35:so=32:pi=33:ex=31:bd=46;34:cd=43;34:su=41;30:sg=46;30:tw=42;30:ow=43;30'

alias ls="ls -GF"
alias gls="gls --color"

zstyle ':completion:*' list-colors 'di=34' 'ln=35' 'so=32' 'ex=31' 'bd=46;34' 'cd=43;34'

# DELETE KEY 有効化
bindkey "^[[3~" delete-char

# powerline-shell
#function powerline_precmd() {
#    PS1="$(~/powerline-shell.py $? --shell zsh 2> /dev/null)"
#}
#
#function install_powerline_precmd() {
#  for s in "${precmd_functions[@]}"; do
#    if [ "$s" = "powerline_precmd" ]; then
#      return
#    fi
#  done
#  precmd_functions+=(powerline_precmd)
#}
#
#if [ "$TERM" != "linux" ]; then
#    install_powerline_precmd
#fi

# HOMEBREW
PATH=$PATH:$HOME/bin
export PATH="$HOME/.linuxbrew/bin:$PATH"
export MANPATH="$HOME/.linuxbrew/share/man:$MANPATH"
export INFOPATH="$HOME/.linuxbrew/share/info:$INFOPATH"
export LD_LIBRARY_PATH="$HOME/.linuxbrew/lib:$LD_LIBRARY_PATH"
export PATH="$HOME/.linuxbrew/bin:$PATH"
export MANPATH="$HOME/.linuxbrew/share/man:$MANPATH"
export INFOPATH="$HOME/.linuxbrew/share/info:$INFOPATH"
export LD_LIBRARY_PATH="$HOME/.linuxbrew/lib:$LD_LIBRARY_PATH"

# ssh-agent
#echo -n "ssh-agent: "
#if [ -e ~/.ssh-agent-info ]; then
#    source ~/.ssh-agent-info
#fi
#
#ssh-add -l >&/dev/null
#if [ $? = 2 ] ; then
##    echo -n "ssh-agent: restart...."
#    ssh-agent >~/.ssh-agent-info
#    source ~/.ssh-agent-info
#fi
#if ssh-add -l >&/dev/null ; then
##    echo "ssh-agent: Identity is already stored."
#else
#    ssh-add
#fi

# GIT
export GIT_MERGE_AUTOEDIT=no
export PATH="/usr/local/sbin:$PATH"

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"

### Added by Zinit's installer
if [[ ! -f $HOME/.zinit/bin/zinit.zsh ]]; then
    print -P "%F{33}▓▒░ %F{220}Installing DHARMA Initiative Plugin Manager (zdharma/zinit)…%f"
    command mkdir -p "$HOME/.zinit" && command chmod g-rwX "$HOME/.zinit"
    command git clone https://github.com/zdharma/zinit "$HOME/.zinit/bin" && \
        print -P "%F{33}▓▒░ %F{34}Installation successful.%f" || \
        print -P "%F{160}▓▒░ The clone has failed.%f"
fi
source "$HOME/.zinit/bin/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit
### End of Zinit installer's chunk


plugin ice depth=1; zplugin light romkatv/powerlevel10k

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
