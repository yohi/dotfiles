# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

export LANG=ja_JP.UTF-8
###########################3 
###########################3 autoload -Uz colors
###########################3 colors
###########################3 
# コマンドのスペルミスを指摘
setopt correct
###########################3 
###########################3 #bindkey -v
###########################3 #bindkey -a
###########################3 
###########################3 case ${OSTYPE} in
###########################3   darwin*)
###########################3     # MAC
###########################3     PROMPT='%F{red}[%n@%m]%f %~
###########################3 %% '
###########################3     export PATH="/usr/local/sbin:$PATH"
###########################3     #export PATH=$PATH:/Applications/MAMP/Library/bin
###########################3     ;;
###########################3   linux*)
###########################3     # LINUX
###########################3     PROMPT='%F{blue}[%n@%m]%f %~
###########################3 %% '
###########################3     ;;
###########################3 esac
###########################3 
###########################3 
###########################3 fpath=(/usr/local/share/zsh-completions $fpath)
###########################3 
alias la="ls -a"
alias ll="ls -l"
alias du="du -h"
alias df="df -h"
alias ld="lazydocker"
alias lg="lazygit"
###########################3 
# ls で ディレクトリに色を付ける
autoload -U compinit
compinit -u
###########################3 
###########################3 export LSCOLORS=exfxcxdxbxegedabagacad
###########################3 export LS_COLORS='di=34:ln=35:so=32:pi=33:ex=31:bd=46;34:cd=43;34:su=41;30:sg=46;30:tw=42;30:ow=43;30'
###########################3 
###########################3 alias ls="ls -GF"
###########################3 alias gls="gls --color"
###########################3 
###########################3 zstyle ':completion:*' list-colors 'di=34' 'ln=35' 'so=32' 'ex=31' 'bd=46;34' 'cd=43;34'
###########################3 
# DELETE KEY 有効化
bindkey "^[[3~" delete-char
###########################3 
###########################3 # powerline-shell
###########################3 #function powerline_precmd() {
###########################3 #    PS1="$(~/powerline-shell.py $? --shell zsh 2> /dev/null)"
###########################3 #}
###########################3 #
###########################3 #function install_powerline_precmd() {
###########################3 #  for s in "${precmd_functions[@]}"; do
###########################3 #    if [ "$s" = "powerline_precmd" ]; then
###########################3 #      return
###########################3 #    fi
###########################3 #  done
###########################3 #  precmd_functions+=(powerline_precmd)
###########################3 #}
###########################3 #
###########################3 #if [ "$TERM" != "linux" ]; then
###########################3 #    install_powerline_precmd
###########################3 #fi
###########################3 
#
# 履歴ファイルの保存先
export HISTFILE=${HOME}/.zsh_history

# メモリに保存される履歴の件数
export HISTSIZE=1000

# 履歴ファイルに保存される履歴の件数
export SAVEHIST=100000

# 重複を記録しない
setopt hist_ignore_dups

# HOMEBREW
# PATH=$PATH:$HOME/bin
# export PATH="$HOME/.linuxbrew/bin:$PATH"
# export MANPATH="$HOME/.linuxbrew/share/man:$MANPATH"
# export INFOPATH="$HOME/.linuxbrew/share/info:$INFOPATH"
# export LD_LIBRARY_PATH="$HOME/.linuxbrew/lib:$LD_LIBRARY_PATH"
# export PATH="$HOME/.linuxbrew/bin:$PATH"
# export MANPATH="$HOME/.linuxbrew/share/man:$MANPATH"
# export INFOPATH="$HOME/.linuxbrew/share/info:$INFOPATH"
# export LD_LIBRARY_PATH="$HOME/.linuxbrew/lib:$LD_LIBRARY_PATH"
export PATH="/home/linuxbrew/.linuxbrew/bin:$PATH"
export PATH="/home/linuxbrew/.linuxbrew/sbin:$PATH"

###########################3 
###########################3 # ssh-agent
###########################3 #echo -n "ssh-agent: "
###########################3 #if [ -e ~/.ssh-agent-info ]; then
###########################3 #    source ~/.ssh-agent-info
###########################3 #fi
###########################3 #
###########################3 #ssh-add -l >&/dev/null
###########################3 #if [ $? = 2 ] ; then
###########################3 ##    echo -n "ssh-agent: restart...."
###########################3 #    ssh-agent >~/.ssh-agent-info
###########################3 #    source ~/.ssh-agent-info
###########################3 #fi
###########################3 #if ssh-add -l >&/dev/null ; then
###########################3 ##    echo "ssh-agent: Identity is already stored."
###########################3 #else
###########################3 #    ssh-add
###########################3 #fi
###########################3 
###########################3 # GIT
###########################3 export GIT_MERGE_AUTOEDIT=no
###########################3 export PATH="/usr/local/sbin:$PATH"
###########################3 
###########################3 [ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
###########################3 
###########################3 export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"
###########################3 
###########################3 ### Added by Zinit's installer
###########################3 if [[ ! -f $HOME/.zinit/bin/zinit.zsh ]]; then
###########################3     print -P "%F{33}▓▒░ %F{220}Installing DHARMA Initiative Plugin Manager (zdharma/zinit)…%f"
###########################3     command mkdir -p "$HOME/.zinit" && command chmod g-rwX "$HOME/.zinit"
###########################3     command git clone https://github.com/zdharma/zinit "$HOME/.zinit/bin" && \
###########################3         print -P "%F{33}▓▒░ %F{34}Installation successful.%f" || \
###########################3         print -P "%F{160}▓▒░ The clone has failed.%f"
###########################3 fi
###########################3 source "$HOME/.zinit/bin/zinit.zsh"
###########################3 autoload -Uz _zinit
###########################3 (( ${+_comps} )) && _comps[zinit]=_zinit
###########################3 ### End of Zinit installer's chunk
#
#
#
#
source /home/linuxbrew/.linuxbrew/opt/powerlevel10k/powerlevel10k.zsh-theme 

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh



source /home/linuxbrew/.linuxbrew/share/zsh-autosuggestions/zsh-autosuggestions.zsh


# ROOTLESS DOCKER
export DOCKER_HOST=unix://$XDG_RUNTIME_DIR/docker.sock

# DOCKER BUILDKIT
export DOCKER_BUILDKIT=1
export COMPOSE_DOCKER_CLI_BUILD=1
### End of Zinit's installer chunk


# zinit settings
# sh -c "$(curl -fsSL https://raw.githubusercontent.com/zdharma/zinit/master/doc/install.sh)"
source $HOME/.zinit/bin/zinit.zsh

autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit
zinit light zsh-users/zsh-autosuggestions
zinit light zdharma/fast-syntax-highlighting
zinit light zdharma/history-search-multi-word

zinit ice from"gh-r" as"program"
zinit load junegunn/fzf-bin

zinit wait lucid atload"zicompinit; zicdreplay" blockf for zsh-users/zsh-completions

# peco settings
# brew install peco

# 過去に実行したコマンドを選択。ctrl-rにバインド
function peco-select-history() {
  BUFFER=$(\history -n -r 1 | peco --query "$LBUFFER")
  CURSOR=$#BUFFER
  zle clear-screen
}
zle -N peco-select-history
bindkey '^r' peco-select-history

# search a destination from cdr list
function peco-get-destination-from-cdr() {
  cdr -l | \
  sed -e 's/^[[:digit:]]*[[:blank:]]*//' | \
  peco --query "$LBUFFER"
}

### 過去に移動したことのあるディレクトリを選択。ctrl-uにバインド
function peco-cdr() {
  local destination="$(peco-get-destination-from-cdr)"
  if [ -n "$destination" ]; then
    BUFFER="cd $destination"
    zle accept-line
  else
    zle reset-prompt
  fi
}
zle -N peco-cdr
bindkey '^u' peco-cdr

# ブランチを簡単切り替え。git checkout lbで実行できる
alias -g lb='`git branch | peco --prompt "GIT BRANCH>" | head -n 1 | sed -e "s/^\*\s*//g"`'

# dockerコンテナに入る。deで実行できる
alias de='docker exec -it $(docker ps | peco | cut -d " " -f 1) /bin/bash'

# エクスプローラオープン
alias open='xdg-open .'
